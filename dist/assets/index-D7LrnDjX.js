(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))d(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const r of e.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&d(r)}).observe(document,{childList:!0,subtree:!0});function i(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?e.credentials="include":t.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function d(t){if(t.ep)return;t.ep=!0;const e=i(t);fetch(t.href,e)}})();async function y(c,o,i){try{const t=`https://car-comparison-xvq9.onrender.com/api/0.3/?cmd=getModels&make=${o}&year=${c}&sold_in_us=1`;console.log("Requesting URL:",t);const e=await fetch(t);if(console.log(t),!e.ok)throw console.error("Failed request with status:",e.status),new Error(`API request failed with status: ${e.status}`);const a=(await e.json()).Models,s=document.getElementById(i);s.innerHTML="";const m=document.createElement("option");m.text="Select Model",m.value="",s.appendChild(m),a.forEach(u=>{const n=document.createElement("option");n.text=u.model_name,n.value=u.model_name,s.appendChild(n)})}catch(d){console.error("Error fetching models:",d)}}async function v(c,o,i,d){try{const e=`https://car-comparison-xvq9.onrender.com/api/0.3/?cmd=getTrims&make=${o}&year=${c}&model=${i}&sold_in_us=1`,s=(await(await fetch(e)).text()).replace(/^.*?({.*})[^}]*$/,"$1"),u=JSON.parse(s).Trims;console.log(e);const n=document.getElementById(d);n.innerHTML="";const l=document.createElement("option");l.text="Select Trim",l.value="",n.appendChild(l),u.forEach(p=>{const g=document.createElement("option");g.text=p.model_trim||"Base",g.value=p.model_trim,g.dataset.modelId=p.model_id,n.appendChild(g)})}catch(t){console.error("Error fetching trims:",t)}}async function w(c){try{const i=`https://car-comparison-xvq9.onrender.com/api/0.3/?cmd=getModel&model=${c}`;console.log("Fetching car details from:",i);const d=await fetch(i);if(!d.ok)throw console.error("API request failed with status:",d.status),new Error(`API request failed with status: ${d.status}`);const t=await d.json();if(console.log("Car details response data:",t),t&&t.length>0)return t[0];throw console.error("No car details returned from API"),new Error("No car details found")}catch(o){return console.error("Error fetching car details:",o),{}}}async function L(c,o,i){try{const t=await(await fetch(`https://www.carimagery.com/api.asmx/GetImageUrl?searchTerm=${i}+${c}+${o}`)).text();return new DOMParser().parseFromString(t,"text/xml").getElementsByTagName("string")[0].textContent}catch(d){return console.error("Error fetching car image:",d),null}}async function _(c,o){if(!o.model_make_display||!o.model_name||!o.model_year){c.innerHTML="<p>Sorry, car details could not be loaded.</p>";return}const i=await L(o.model_make_display,o.model_name,o.model_year);if(!i){c.innerHTML="<p>Car image could not be loaded.</p>";return}c.innerHTML=`
    <h2>${o.model_make_display} ${o.model_name} ${o.model_year}</h2>
    <img src="${i}" alt="${o.model_make_display} ${o.model_name}" style="max-width: 100%; height: auto; border-radius: 8px;">
    <p>Trim: ${o.model_trim||"N/A"}</p>
    <p>MPG (City): ${o.model_mpg_city||"N/A"} mpg</p>
    <p>MPG (Highway): ${o.model_mpg_hwy||"N/A"} mpg</p>
    <p>MPG (Average): ${o.model_mpg_mixed||"N/A"} mpg</p>
    <p>Engine Size: ${o.model_engine_l||"N/A"}L</p>
    <p>Horsepower: ${o.model_engine_power_hp||"N/A"} hp</p>
    <p>Torque: ${o.model_engine_torque_lbft||"N/A"} lb-ft</p>
    <p>RPM: ${o.model_engine_power_rpm||"N/A"}</p>
    <p>Drivetrain: ${o.model_drive||"N/A"}</p>
    <p>Stock Tire Size: ${o.model_tire_size||"N/A"}</p>
    <p>Fuel Tank Size: ${o.model_fuel_cap_g||"N/A"} gallons</p>
  `}document.addEventListener("DOMContentLoaded",()=>{const c=["Acura","BMW","Buick","Cadillac","Chevrolet","Chrysler","Dodge","Ford","GMC","Genesis","Honda","Hyundai","Infiniti","Jeep","Kia","Lexus","Lincoln","Mazda","Mercedes-Benz","Mini","Nissan","Porsche","Ram","Subaru","Toyota","Volkswagen","Volvo"],o=new Date().getFullYear(),i=Array.from({length:o-1990+1},(e,r)=>o-r);function d(e){const r=document.getElementById(e);i.forEach(a=>{const s=document.createElement("option");s.value=a,s.textContent=a,r.appendChild(s)})}function t(e){const r=document.getElementById(e);c.forEach(a=>{const s=document.createElement("option");s.value=a,s.textContent=a,r.appendChild(s)})}[1,2,3].forEach(e=>{d(`yearDropdown${e}`),t(`makeDropdown${e}`);const r=document.getElementById(`yearDropdown${e}`),a=document.getElementById(`makeDropdown${e}`),s=document.getElementById(`modelDropdown${e}`),m=document.getElementById(`trimDropdown${e}`),u=document.getElementById(`carDetailsContainer${e}`);r.addEventListener("change",()=>{const n=r.value,l=a.value;n&&l&&(y(n,l,`modelDropdown${e}`),m.innerHTML='<option value="">Select Trim</option>',u.innerHTML="")}),a.addEventListener("change",()=>{const n=r.value,l=a.value;n&&l&&(y(n,l,`modelDropdown${e}`),m.innerHTML='<option value="">Select Trim</option>',u.innerHTML="")}),s.addEventListener("change",()=>{const n=r.value,l=a.value,p=s.value;n&&l&&p&&v(n,l,p,`trimDropdown${e}`)}),m.addEventListener("change",async()=>{var p;const n=m.selectedOptions[0],l=(p=n==null?void 0:n.dataset)==null?void 0:p.modelId;if(l){const g=await w(l);_(u,g)}}),[a,s,m].forEach(n=>{n.addEventListener("change",()=>{const l=r.value,p=a.value,g=s.value,$=m.value;if(l&&p&&g&&$){const f=m.options[m.selectedIndex],h=f==null?void 0:f.dataset.modelId;h?(console.log("Selected model_id:",h),w(h).then(E=>_(u,E))):console.warn("No model_id found for selected trim")}})})}),document.querySelectorAll(".addCarBtn").forEach(e=>{e.addEventListener("click",()=>{const r=e.getAttribute("data-car");document.getElementById(`carForm${r}`).classList.remove("hidden"),e.style.display="none"})})});
