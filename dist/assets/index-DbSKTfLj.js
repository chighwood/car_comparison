(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&r(n)}).observe(document,{childList:!0,subtree:!0});function l(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(t){if(t.ep)return;t.ep=!0;const o=l(t);fetch(t.href,o)}})();async function y(c,e,l){try{const r=`https://www.carqueryapi.com/api/0.3/?cmd=getModels&make=${e}&year=${c}&sold_in_us=1`;console.log("Requesting URL:",r);const t=await fetch(r);if(console.log(r),!t.ok)throw console.error("Failed request with status:",t.status),new Error(`API request failed with status: ${t.status}`);const n=(await t.json()).Models,s=document.getElementById(l);s.innerHTML="";const i=document.createElement("option");i.text="Select Model",i.value="",s.appendChild(i),n.forEach(m=>{const p=document.createElement("option");p.text=m.model_name,p.value=m.model_name,s.appendChild(p)})}catch(r){console.error("Error fetching models:",r)}}async function v(c,e,l,r){try{const t=`/api/0.3/?cmd=getTrims&make=${e}&year=${c}&model=${l}&sold_in_us=1`,s=(await(await fetch(t)).text()).replace(/^.*?({.*})[^}]*$/,"$1"),m=JSON.parse(s).Trims;console.log(t);const p=document.getElementById(r);p.innerHTML="";const d=document.createElement("option");d.text="Select Trim",d.value="",p.appendChild(d),m.forEach(a=>{const u=document.createElement("option");u.text=a.model_trim||"Base",u.value=a.model_trim,u.dataset.modelId=a.model_id,p.appendChild(u)})}catch(t){console.error("Error fetching trims:",t)}}async function w(c){try{const e=`/api/0.3/?cmd=getModel&model=${c}`;console.log("Fetching car details from:",e);const l=await fetch(e);if(!l.ok)throw console.error("API request failed with status:",l.status),new Error(`API request failed with status: ${l.status}`);const r=await l.json();if(console.log("Car details response data:",r),r&&r.length>0)return r[0];throw console.error("No car details returned from API"),new Error("No car details found")}catch(e){return console.error("Error fetching car details:",e),{}}}async function M(c,e,l){try{const t=await(await fetch(`https://www.carimagery.com/api.asmx/GetImageUrl?searchTerm=${l}+${c}+${e}`)).text();return new DOMParser().parseFromString(t,"text/xml").getElementsByTagName("string")[0].textContent}catch(r){return console.error("Error fetching car image:",r),null}}async function _(c,e){if(!e.model_make_display||!e.model_name||!e.model_year){c.innerHTML="<p>Sorry, car details could not be loaded.</p>";return}const l=await M(e.model_make_display,e.model_name,e.model_year);if(!l){c.innerHTML="<p>Car image could not be loaded.</p>";return}c.innerHTML=`
    <h2>${e.model_make_display} ${e.model_name} ${e.model_year}</h2>
    <img src="${l}" alt="${e.model_make_display} ${e.model_name}" style="max-width: 100%; height: auto; border-radius: 8px;">
    <p>Trim: ${e.model_trim||"N/A"}</p>
    <p>MPG (City): ${e.model_mpg_city||"N/A"} mpg</p>
    <p>MPG (Highway): ${e.model_mpg_hwy||"N/A"} mpg</p>
    <p>MPG (Average): ${e.model_mpg_mixed||"N/A"} mpg</p>
    <p>Engine Size: ${e.model_engine_l||"N/A"}L</p>
    <p>Horsepower: ${e.model_engine_power_hp||"N/A"} hp</p>
    <p>Torque: ${e.model_engine_torque_lbft||"N/A"} lb-ft</p>
    <p>RPM: ${e.model_engine_power_rpm||"N/A"}</p>
    <p>Drivetrain: ${e.model_drive||"N/A"}</p>
    <p>Stock Tire Size: ${e.model_tire_size||"N/A"}</p>
    <p>Fuel Tank Size: ${e.model_fuel_cap_g||"N/A"} gallons</p>
  `}document.addEventListener("DOMContentLoaded",()=>{const c=["Acura","BMW","Buick","Cadillac","Chevrolet","Chrysler","Dodge","Ford","GMC","Genesis","Honda","Hyundai","Infiniti","Jeep","Kia","Lexus","Lincoln","Mazda","Mercedes-Benz","Mini","Nissan","Porsche","Ram","Subaru","Toyota","Volkswagen","Volvo"],e=new Date().getFullYear(),l=Array.from({length:e-1990+1},(o,n)=>e-n);function r(o){const n=document.getElementById(o);l.forEach(s=>{const i=document.createElement("option");i.value=s,i.textContent=s,n.appendChild(i)})}function t(o){const n=document.getElementById(o);c.forEach(s=>{const i=document.createElement("option");i.value=s,i.textContent=s,n.appendChild(i)})}[1,2,3].forEach(o=>{r(`yearDropdown${o}`),t(`makeDropdown${o}`);const n=document.getElementById(`yearDropdown${o}`),s=document.getElementById(`makeDropdown${o}`),i=document.getElementById(`modelDropdown${o}`),m=document.getElementById(`trimDropdown${o}`),p=document.getElementById(`carDetailsContainer${o}`);n.addEventListener("change",()=>{const d=n.value,a=s.value;d&&a&&(y(d,a,`modelDropdown${o}`),m.innerHTML='<option value="">Select Trim</option>',p.innerHTML="")}),s.addEventListener("change",()=>{const d=n.value,a=s.value;d&&a&&(y(d,a,`modelDropdown${o}`),m.innerHTML='<option value="">Select Trim</option>',p.innerHTML="")}),i.addEventListener("change",()=>{const d=n.value,a=s.value,u=i.value;d&&a&&u&&v(d,a,u,`trimDropdown${o}`)}),m.addEventListener("change",async()=>{var u;const d=m.selectedOptions[0],a=(u=d==null?void 0:d.dataset)==null?void 0:u.modelId;if(a){const g=await w(a);_(p,g)}}),[s,i,m].forEach(d=>{d.addEventListener("change",()=>{const a=n.value,u=s.value,g=i.value,$=m.value;if(a&&u&&g&&$){const f=m.options[m.selectedIndex],h=f==null?void 0:f.dataset.modelId;h?(console.log("Selected model_id:",h),w(h).then(E=>_(p,E))):console.warn("No model_id found for selected trim")}})})}),document.querySelectorAll(".addCarBtn").forEach(o=>{o.addEventListener("click",()=>{const n=o.getAttribute("data-car");document.getElementById(`carForm${n}`).classList.remove("hidden"),o.style.display="none"})})});
